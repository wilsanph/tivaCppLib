#include "tivaCppLibrary/delays.hpp"

#include "tivaCpp/include/Clock.hpp"
#include "tivaCpp/include/Gpio.hpp"
#include "tivaCpp/include/Uart.hpp"

#include "tivaCppLibrary/interrupts.hpp"
#include "tivaCpp/GProjectCore/GObjectContainer.hpp"

clock::Clock systemClock;

Gpio::Pin led( Gpio::port::GPIOPortF_APB, Gpio::pin::pin2 );

Gpio::Pin pinUART0rx( Gpio::port::GPIOPortA_APB, Gpio::pin::pin0 );
Gpio::Pin pinUART0tx( Gpio::port::GPIOPortA_APB, Gpio::pin::pin1 );

uart::Uart uart0( uart::uartModule::UART0 );

int main()
{
	systemClock.config( clock::config::clockSource::mainOscilator,
						clock::config::clockRate::clock_80Mhz );

	// Enable GPIOF-APB clock
	systemClock.enableGpioClock( clock::peripheral::gpio::GPIOF,
								 clock::config::gpioBusType::APBbus );
	// Enable GPIOA-APB clock
	systemClock.enableGpioClock( clock::peripheral::gpio::GPIOA,
								 clock::config::gpioBusType::APBbus );
	// Enable the UART0 clock
	systemClock.enableUartClock( clock::peripheral::uart::UART0 );

	led.enableDigitalFunc();
	led.setMode( Gpio::config::mode::gpio );
	led.setIOMode( Gpio::config::ioMode::output );

	pinUART0rx.enableDigitalFunc();
	pinUART0rx.setMode( Gpio::config::mode::alternate );
	pinUART0rx.setAlternateMode( Gpio::config::altModes::alt1 );

	pinUART0tx.enableDigitalFunc();
	pinUART0tx.setMode( Gpio::config::mode::alternate );
	pinUART0tx.setAlternateMode( Gpio::config::altModes::alt1 );

	uart0.configUart( uart::config::baudrate::BAUDS_115200 );

	while(1)
	{
		led.toggle();

		delays::delay_ms( 250 );
	}
}
